// 
// Decompiled by Procyon v0.6.0
// 

public final class cxs
{
    public static final cxm A;
    public static final cxm B;
    public static final cxm C;
    public static final cxm D;
    public static final cxm E;
    public static final cxm F;
    public static final cxm G;
    public static final cxm H;
    public static final cxm I;
    public static final cxm J;
    public static final cxm K;
    public static final cxm L;
    public static final cxm M;
    public static final cxm N;
    public static final cxm O;
    public static final cxm P;
    public static final cxm Q;
    public static final cxm R;
    public static final cxm S;
    public static final cxm T;
    public static final cxm U;
    public static final cxm V;
    public static final cxm W;
    public static final cxm X;
    public static final cxm Y;
    public static final cxm Z;
    public static final cxo a;
    public static final cxm aa;
    public static final cxm ab;
    public static final cxm ac;
    public static final cxm ad;
    public static final cxm ae;
    public static final cxm af;
    public static final cxm ag;
    public static final cxm ah;
    public static final cxm ai;
    public static final cxm aj;
    public static final cxm ak;
    public static final cxm al;
    public static final cxo b;
    public static final cxo c;
    public static final cxo d;
    public static final cxo e;
    public static final cxo f;
    public static final cxo g;
    public static final cxo h;
    public static final cxo i;
    public static final cxo j;
    public static final cxo k;
    public static final cxo l;
    public static final cxo m;
    public static final cxo n;
    public static final cxo o;
    public static final cxo p;
    public static final cxo q;
    public static final cxo r;
    public static final cxo s;
    public static final cxo t;
    public static final cxo u;
    public static final cxo v;
    public static final cxm w;
    public static final cxm x;
    public static final cxm y;
    public static final cxm z;
    
    static {
        final cxn cxn = new cxn();
        cxn.a = "camera.3a.debug_meta";
        final Integer value = 0;
        final Integer value2 = 1;
        final Integer value3 = 2;
        cxn.c = noi.K(value, value2, value3, 3);
        a = cxn.a();
        final cxn cxn2 = new cxn();
        cxn2.a = "camera.cuttle.motion_ef";
        w = cxn2.c();
        final cxn cxn3 = new cxn();
        cxn3.a = "camera.cuttle.extended";
        x = cxn3.f();
        new cxn().a = "camera.force_cuttle.extended";
        new cxn().a = "camera.cuttle.extended.fz.RESTART";
        final cxn cxn4 = new cxn();
        cxn4.a = "camera.cuttle.sky";
        y = cxn4.f();
        final cxn cxn5 = new cxn();
        cxn5.a = "camera.cuttle.maxexpsec";
        z = cxn5.e();
        final cxn cxn6 = new cxn();
        cxn6.a = "camera.cuttle.extended_iterable_burst";
        A = cxn6.f();
        final cxn cxn7 = new cxn();
        cxn7.a = "camera.cuttle.rerun_fd";
        B = cxn7.f();
        final cxn cxn8 = new cxn();
        cxn8.a = "camera.3a_conv";
        C = cxn8.f();
        new cxn().a = "camera.extburst.RESTART";
        final cxn cxn9 = new cxn();
        cxn9.a = "gcam.hdrplus_wb_source";
        cxn9.c = noi.J(value, value2, value3);
        b = cxn9.a();
        final cxn cxn10 = new cxn();
        cxn10.a = "gcam.psaf_frame_count";
        cxn10.c = nlv.a(nqe.f(value, 10), nme.a);
        c = cxn10.a();
        final cxn cxn11 = new cxn();
        cxn11.a = "gcam.psaf_exp_time_ms";
        D = cxn11.e();
        final cxn cxn12 = new cxn();
        cxn12.a = "gcam.psaf_sb_thresh";
        E = cxn12.e();
        final cxn cxn13 = new cxn();
        cxn13.a = "gcam_capture_thread_count";
        d = cxn13.a();
        final cxn cxn14 = new cxn();
        cxn14.a = "gcam_merge_thread_count";
        e = cxn14.a();
        final cxn cxn15 = new cxn();
        cxn15.a = "gcam_finish_thread_count";
        f = cxn15.a();
        final cxn cxn16 = new cxn();
        cxn16.a = "gcam.zsl_buffer_size";
        g = cxn16.a();
        final cxn cxn17 = new cxn();
        cxn17.a = "camera.hdr_hvx.RESTART";
        F = cxn17.c();
        new cxn().a = "camera.hdr_postview_hvx.RESTART";
        final cxn cxn18 = new cxn();
        cxn18.a = "gcam.max_burst_size";
        h = cxn18.a();
        final cxn cxn19 = new cxn();
        cxn19.a = "camera.p3_available";
        G = cxn19.c();
        new cxn().a = "camera.p3_force";
        final cxn cxn20 = new cxn();
        cxn20.a = "camera.shasta_psl";
        H = cxn20.f();
        final cxn cxn21 = new cxn();
        cxn21.a = "camera.shasta_zsl";
        I = cxn21.f();
        final cxn cxn22 = new cxn();
        cxn22.a = "camera.shasta.frame_retention_ms";
        i = cxn22.a();
        new cxn().a = "camera.shasta.force";
        final cxn cxn23 = new cxn();
        cxn23.a = "camera.shasta.factor";
        J = cxn23.e();
        final cxn cxn24 = new cxn();
        cxn24.a = "camera.shasta_zsl.burst_size";
        j = cxn24.a();
        final cxn cxn25 = new cxn();
        cxn25.a = "camera.shasta_zsl.max_exptime_ms";
        K = cxn25.e();
        final cxn cxn26 = new cxn();
        cxn26.a = "SABRE_ALLOWED";
        L = cxn26.f();
        new cxn().a = "camera.sabre_force";
        new cxn().a = "camera.spatial_rgb_enabled";
        new cxn().a = "camera.spatial_rgb_force";
        final cxn cxn27 = new cxn();
        cxn27.a = "camera.wiener_force";
        M = cxn27.f();
        new cxn().a = "camera.sabre_unzoomed_all";
        final cxn cxn28 = new cxn();
        cxn28.a = "camera.sabre_unzoomed_tele";
        N = cxn28.f();
        final cxn cxn29 = new cxn();
        cxn29.a = "camera.sabre_unzoomed_ns";
        O = cxn29.f();
        new cxn().a = "camera.sabre_unzoomed_astro";
        new cxn().a = "camera.slowraw";
        final cxn cxn30 = new cxn();
        cxn30.a = "camera.estrella_login_enabled";
        P = cxn30.c();
        new cxn().a = "camera.catfish_enabled";
        final cxn cxn31 = new cxn();
        cxn31.a = "camera.catfish_flash_anim_capture_threshold_ms";
        k = cxn31.a();
        new cxn().a = "camera.flash_animation_experiment";
        final cxn cxn32 = new cxn();
        cxn32.a = "camera.flash_anim_fade_in_ms";
        l = cxn32.a();
        final cxn cxn33 = new cxn();
        cxn33.a = "camera.flash_anim_fade_out_ms";
        m = cxn33.a();
        final cxn cxn34 = new cxn();
        cxn34.a = "camera.flash_anim_max_alpha";
        Q = cxn34.e();
        final cxn cxn35 = new cxn();
        cxn35.a = "POST_CAPTURE_TEMPORAL_BINNING";
        R = cxn35.f();
        new cxn().a = "camera.force_low_light_fps";
        final cxn cxn36 = new cxn();
        cxn36.a = "gcam.zsl_ns";
        S = cxn36.f();
        final cxn cxn37 = new cxn();
        cxn37.a = "gcam.zsl_ns.forcedtbfactor";
        n = cxn37.a();
        final cxn cxn38 = new cxn();
        cxn38.a = "hdrnet_enabled";
        T = cxn38.f();
        final cxn cxn39 = new cxn();
        cxn39.a = "camera.hdrnet.height";
        o = cxn39.a();
        new cxn().a = "camera.hdrnet.hi-res";
        final cxn cxn40 = new cxn();
        cxn40.a = "camera.nonzsl_extended_base_frame_selection";
        U = cxn40.c();
        new cxn().a = "gcam.vf.verbose";
        final cxn cxn41 = new cxn();
        cxn41.a = "gcam.sabre_burst_size";
        p = cxn41.a();
        final cxn cxn42 = new cxn();
        cxn42.a = "gcam.temporal_binning_burst_size";
        q = cxn42.a();
        final cxn cxn43 = new cxn();
        cxn43.a = "camera.zsl.extended_buffer_factor";
        V = cxn43.e();
        final cxn cxn44 = new cxn();
        cxn44.a = "camera.catshark_enabled.RESTART";
        W = cxn44.f();
        final cxn cxn45 = new cxn();
        cxn45.a = "camera.catshark_cheese";
        X = cxn45.f();
        final cxn cxn46 = new cxn();
        cxn46.a = "camera.catshark_in_threshold";
        Y = cxn46.e();
        final cxn cxn47 = new cxn();
        cxn47.a = "camera.catshark_out_threshold";
        Z = cxn47.e();
        final cxn cxn48 = new cxn();
        cxn48.a = "camera.catshark_cheese_in_threshold";
        aa = cxn48.e();
        final cxn cxn49 = new cxn();
        cxn49.a = "camera.catshark_cheese_out_threshold";
        ab = cxn49.e();
        final cxn cxn50 = new cxn();
        cxn50.a = "camera.catshark_full_threshold";
        ac = cxn50.e();
        final cxn cxn51 = new cxn();
        cxn51.a = "camera.catshark_af";
        ad = cxn51.f();
        final cxn cxn52 = new cxn();
        cxn52.a = "camera.cuttle.fastaf";
        ae = cxn52.f();
        final cxn cxn53 = new cxn();
        cxn53.a = "camera.kepler_enabled";
        af = cxn53.f();
        final cxn cxn54 = new cxn();
        cxn54.a = "camera.kepler_min_frame_count";
        r = cxn54.a();
        final cxn cxn55 = new cxn();
        cxn55.a = "camera.kepler_merge_frame_count";
        s = cxn55.a();
        final cxn cxn56 = new cxn();
        cxn56.a = "camera.kepler_capture_threshold_ms";
        t = cxn56.a();
        final cxn cxn57 = new cxn();
        cxn57.a = "camera.kepler_stream_enabled";
        ag = cxn57.f();
        new cxn().a = "camera.kepler_hevc_enabled";
        final cxn cxn58 = new cxn();
        cxn58.a = "camera.kepler_frame_duration_ms";
        u = cxn58.a();
        new cxn().a = "camera.kepler_micro";
        final cxn cxn59 = new cxn();
        cxn59.a = "camera.disable_hdrplus_postview";
        ah = cxn59.f();
        final cxn cxn60 = new cxn();
        cxn60.a = "camera.cuttle.enable_timeout";
        ai = cxn60.f();
        final cxn cxn61 = new cxn();
        cxn61.a = "camera.cuttle.custom_timeout_ms";
        v = cxn61.a();
        final cxn cxn62 = new cxn();
        cxn62.a = "camera.hwbuf_often";
        aj = cxn62.f();
        final cxn cxn63 = new cxn();
        cxn63.a = "camera.hdr_plus_torch_thermal_throttling";
        ak = cxn63.f();
        new cxn().a = "camera.falcon_enabled";
        new cxn().a = "camera.falcon_annotate";
        new cxn().a = "camera.falcon_save_primary";
        new cxn().a = "camera.falcon_save_secondary";
        new cxn().a = "camera.falcon_power_hint";
        new cxn().a = "camera.falcon_always_on";
        new cxn().a = "camera.falcon_force_fusion";
        final cxn cxn64 = new cxn();
        cxn64.a = "camera.gpu_sampled_image";
        al = cxn64.f();
    }
}
